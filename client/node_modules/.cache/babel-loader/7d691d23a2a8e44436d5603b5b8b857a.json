{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/adrien/Documents/web_dev/REACT/mern_memories/client/src/components/Navbar/Navbar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport decode from 'jwt-decode';\nimport useStyles from './styles';\nimport memoriesLogo from '../../assets/memories-Logo.png';\nimport memoriesText from '../../assets/memories-Text.png';\n\nconst Navbar = () => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n  const dispatch = useDispatch();\n\n  const logout = () => {\n    dispatch({\n      type: 'LOGOUT'\n    });\n    history.push('/');\n    setUser(null);\n  };\n\n  useEffect(() => {\n    const token = user === null || user === void 0 ? void 0 : user.token;\n\n    if (token) {\n      const decodedToken = decode(token);\n\n      if (decodedToken.exp * 100 < new Date().getTime()) {\n        logout();\n      }\n    }\n\n    setUser(JSON.parse(localStorage.getItem('profile')));\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      className: classes.appBar,\n      position: \"static\",\n      color: \"inherit\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.brandContainer,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: Link,\n          to: \"/\",\n          className: classes.heading,\n          variant: \"h2\",\n          align: \"center\",\n          children: \"Memories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.image,\n          src: memories,\n          alt: \"memories\",\n          height: \"60\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbar,\n        children: user ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.profile,\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.purple,\n            alt: user.result.name,\n            src: user.result.imageUrl,\n            children: user.result.name.charAt(0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.userName,\n            variant: \"h6\",\n            children: user.result.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.logout,\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: logout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          component: Link,\n          to: \"/auth\",\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Navbar, \"ySpN7wM4W4Q7+6F8miV/cB7jOA4=\", false, function () {\n  return [useStyles, useHistory, useLocation, useDispatch];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/home/adrien/Documents/web_dev/REACT/mern_memories/client/src/components/Navbar/Navbar.jsx"],"names":["React","useState","useEffect","AppBar","Typography","Toolbar","Avatar","Button","Link","useDispatch","useHistory","useLocation","decode","useStyles","memoriesLogo","memoriesText","Navbar","classes","history","location","user","setUser","JSON","parse","localStorage","getItem","dispatch","logout","type","push","token","decodedToken","exp","Date","getTime","appBar","brandContainer","heading","image","memories","toolbar","profile","purple","result","name","imageUrl","charAt","userName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport decode from 'jwt-decode';\n\nimport useStyles from './styles';\nimport memoriesLogo from '../../assets/memories-Logo.png';\nimport memoriesText from '../../assets/memories-Text.png';\n\nconst Navbar = () => {\n    const classes = useStyles();\n    const history = useHistory();\n    const location = useLocation();\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n    const dispatch = useDispatch();\n\n    const logout = () => {\n        dispatch({ type: 'LOGOUT' });\n        history.push('/');\n        setUser(null);\n    };\n\n    useEffect(() => {\n        \n        const token = user?.token;\n        \n        if(token) {\n            const decodedToken = decode(token);\n            if(decodedToken.exp *100 < new Date().getTime()) {\n                logout();\n            }\n        }\n        setUser(JSON.parse(localStorage.getItem('profile')))\n    }, [location]);\n\n    return (\n        <>\n            <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n                <div className={classes.brandContainer}>\n                    <Typography component={Link} to=\"/\" className={classes.heading} variant=\"h2\" align=\"center\">Memories</Typography>\n                    <img className={classes.image} src={memories} alt=\"memories\" height=\"60\" />\n                </div>\n                <Toolbar className={classes.toolbar}>\n                    {user ? (\n                        <div className={classes.profile}>\n                            <Avatar className={classes.purple} alt={user.result.name} src={user.result.imageUrl}>{user.result.name.charAt(0)}</Avatar>\n                            <Typography className={classes.userName} variant=\"h6\">{user.result.name}</Typography>\n                            <Button className={classes.logout} variant=\"contained\" color=\"secondary\" onClick={logout}>Logout</Button>\n                        </div>\n                    ): (\n                        <Button component={Link} to=\"/auth\" variant=\"contained\" color=\"primary\">Sign In</Button>\n                    )}\n            </Toolbar>\n            </AppBar>\n        </>\n    )\n}\n\nexport default Navbar\n"]},"metadata":{},"sourceType":"module"}
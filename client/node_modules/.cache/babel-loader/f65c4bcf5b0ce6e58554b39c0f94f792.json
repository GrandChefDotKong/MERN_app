{"ast":null,"code":"import * as api from '../api';\nimport { CREATE, FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, DELETE, UPDATE, LIKE, COMMENT, START_LOADING, END_LOADING } from '../constants/actionTypes';\nexport const getPost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    console.log(id);\n    const {\n      data\n    } = await api.fetchPost(id);\n    dispatch({\n      type: FETCH_POST,\n      payload: {\n        post: data\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = (post, history) => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    history.push(`/posts/${data._id}`);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const commentPost = (comment, id) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.commentPost(comment, id);\n    dispatch({\n      type: COMMENT,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/home/adrien/Documents/web_dev/REACT/mern_memories/client/src/actions/posts.jsx"],"names":["api","CREATE","FETCH_ALL","FETCH_POST","FETCH_BY_SEARCH","DELETE","UPDATE","LIKE","COMMENT","START_LOADING","END_LOADING","getPost","id","dispatch","type","console","log","data","fetchPost","payload","post","error","getPosts","page","fetchPosts","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","history","push","_id","updatePost","deletePost","likePost","commentPost","comment"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,QAArB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,UAA5B,EAAwCC,eAAxC,EAAyDC,MAAzD,EAAiEC,MAAjE,EAAyEC,IAAzE,EAA+EC,OAA/E,EAAwFC,aAAxF,EAAuGC,WAAvG,QAA0H,0BAA1H;AAEA,OAAO,MAAMC,OAAO,GAAIC,EAAD,IAAQ,MAAOC,QAAP,IAAoB;AAC/C,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;AAEAM,IAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ;AAEA,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAMjB,GAAG,CAACkB,SAAJ,CAAcN,EAAd,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEX,UAAR;AAAoBgB,MAAAA,OAAO,EAAE;AAAEC,QAAAA,IAAI,EAAEH;AAAR;AAA7B,KAAD,CAAR;AAEAJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ;AAAR,KAAD,CAAR;AACH,GATD,CASE,OAAOW,KAAP,EAAc;AACZN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACH;AACJ,CAbM;AAeP,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAU,MAAOV,QAAP,IAAoB;AAClD,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;AAEA,UAAM;AAAEQ,MAAAA;AAAF,QAAW,MAAMjB,GAAG,CAACwB,UAAJ,CAAeD,IAAf,CAAvB;AACAV,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEZ,SAAR;AAAmBiB,MAAAA,OAAO,EAAEF;AAA5B,KAAD,CAAR;AAEAJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ;AAAR,KAAD,CAAR;AACH,GAPD,CAOE,OAAOW,KAAP,EAAc;AACZN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACH;AACJ,CAXM;AAaP,OAAO,MAAMI,gBAAgB,GAAIC,WAAD,IAAiB,MAAOb,QAAP,IAAoB;AACjE,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;AACA,UAAM;AAAEQ,MAAAA,IAAI,EAAE;AAAEA,QAAAA;AAAF;AAAR,QAAqB,MAAMjB,GAAG,CAAC2B,kBAAJ,CAAuBD,WAAvB,CAAjC;AACAb,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV,eAAR;AAAyBe,MAAAA,OAAO,EAAEF;AAAlC,KAAD,CAAR;AACAJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ;AAAR,KAAD,CAAR;AACH,GALD,CAKE,OAAOW,KAAP,EAAc;AACZN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACH;AACJ,CATM;AAWP,OAAO,MAAMO,UAAU,GAAG,CAACR,IAAD,EAAOS,OAAP,KAAmB,MAAOhB,QAAP,IAAoB;AAC7D,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;AACA,UAAM;AAAEQ,MAAAA;AAAF,QAAW,MAAMjB,GAAG,CAAC4B,UAAJ,CAAeR,IAAf,CAAvB;AAEAS,IAAAA,OAAO,CAACC,IAAR,CAAc,UAASb,IAAI,CAACc,GAAI,EAAhC;AAEAlB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEb,MAAR;AAAgBkB,MAAAA,OAAO,EAAEF;AAAzB,KAAD,CAAR;AACH,GAPD,CAOE,OAAOI,KAAP,EAAc;AACZN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACH;AACJ,CAXM;AAaP,OAAO,MAAMW,UAAU,GAAG,CAACpB,EAAD,EAAKQ,IAAL,KAAc,MAAOP,QAAP,IAAoB;AACxD,MAAI;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMjB,GAAG,CAACgC,UAAJ,CAAepB,EAAf,EAAmBQ,IAAnB,CAAvB;AACAP,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,MAAR;AAAgBa,MAAAA,OAAO,EAAEF;AAAzB,KAAD,CAAR;AACH,GAHD,CAGE,OAAOI,KAAP,EAAc;AACZN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACH;AACJ,CAPM;AASP,OAAO,MAAMY,UAAU,GAAIrB,EAAD,IAAQ,MAAOC,QAAP,IAAoB;AAClD,MAAI;AACA,UAAMb,GAAG,CAACiC,UAAJ,CAAerB,EAAf,CAAN;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET,MAAR;AAAgBc,MAAAA,OAAO,EAAEP;AAAzB,KAAD,CAAR;AACH,GAHD,CAGE,OAAOS,KAAP,EAAc;AACZN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACH;AACJ,CAPM;AASP,OAAO,MAAMa,QAAQ,GAAItB,EAAD,IAAQ,MAAOC,QAAP,IAAoB;AAChD,MAAI;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMjB,GAAG,CAACkC,QAAJ,CAAatB,EAAb,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,IAAR;AAAcY,MAAAA,OAAO,EAAEF;AAAvB,KAAD,CAAR;AACH,GAHD,CAGE,OAAOI,KAAP,EAAc;AACZN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACH;AACJ,CAPM;AASP,OAAO,MAAMc,WAAW,GAAG,CAACC,OAAD,EAAUxB,EAAV,KAAiB,MAAOC,QAAP,IAAoB;AAC5D,MAAI;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMjB,GAAG,CAACmC,WAAJ,CAAgBC,OAAhB,EAAyBxB,EAAzB,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,OAAR;AAAiBW,MAAAA,OAAO,EAAEF;AAA1B,KAAD,CAAR;AACH,GAHD,CAGE,OAAOI,KAAP,EAAc;AACZN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACH;AACJ,CAPM","sourcesContent":["import * as api from '../api';\nimport { CREATE, FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, DELETE, UPDATE, LIKE, COMMENT, START_LOADING, END_LOADING } from '../constants/actionTypes';\n\nexport const getPost = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING });\n\n        console.log(id);\n\n        const { data } = await api.fetchPost(id);\n        dispatch({ type: FETCH_POST, payload: { post: data } });\n\n        dispatch({ type: END_LOADING });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const getPosts = (page) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING });\n\n        const { data } = await api.fetchPosts(page);\n        dispatch({ type: FETCH_ALL, payload: data });\n\n        dispatch({ type: END_LOADING });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING });\n        const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\n        dispatch({ type: FETCH_BY_SEARCH, payload: data });\n        dispatch({ type: END_LOADING });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const createPost = (post, history) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING });\n        const { data } = await api.createPost(post);\n\n        history.push(`/posts/${data._id}`);\n\n        dispatch({ type: CREATE, payload: data });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        const { data } = await api.updatePost(id, post);\n        dispatch({ type: UPDATE, payload: data });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id);\n        dispatch({ type: DELETE, payload: id });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const likePost = (id) => async (dispatch) => {\n    try {\n        const { data } = await api.likePost(id);\n        dispatch({ type: LIKE, payload: data });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const commentPost = (comment, id) => async (dispatch) => {\n    try {\n        const { data } = await api.commentPost(comment, id);\n        dispatch({ type: COMMENT, payload: data });\n    } catch (error) {\n        console.log(error);\n    }\n}"]},"metadata":{},"sourceType":"module"}
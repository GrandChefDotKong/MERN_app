{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/adrien/Documents/web_dev/REACT/mern_memories/client/src/components/Auth/Auth.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Avatar, Button, Paper, Grid, Typography, Container, OutlinedInput } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { GoogleLogin } from 'react-google-login';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport useStyles from './styles';\nimport Input from './Input';\nimport Icon from './icon';\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nconst Auth = () => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignUp, setisSignUp] = useState(false);\n  const [formData, setFormData] = useState(initialState);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('submit');\n  };\n\n  const handleChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  const switchMode = () => {\n    setisSignUp(previsSignUp => !previsSignUp);\n    setShowPassword(false);\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: 'AUTH',\n        data: {\n          result,\n          token\n        }\n      });\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFailure = () => {\n    console.log(\"Fail to log in with google :(\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: isSignUp ? 'Sign Up' : 'Sign In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isSignUp && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              half: true,\n              name: \"firstName\",\n              label: \"First Name\",\n              autoFocus: true,\n              handleChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              half: true,\n              name: \"lastName\",\n              label: \"Last Name\",\n              handleChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            label: \"Email Address\",\n            type: \"email\",\n            handleChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            label: \"Password\",\n            type: showPassword ? \"text\" : \"password\",\n            handleChange: handleChange,\n            handleShowPassword: handleShowPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), isSignUp && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmPassword\",\n            label: \"Confirm Password\",\n            type: \"password\",\n            handleChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: isSignUp ? \"Sign Up\" : \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"232609410583-kojm4bgmtp52v6m3anbh4m944kt8e5e9.apps.googleusercontent.com\",\n          render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.googleButton,\n            color: \"primary\",\n            fullWidth: true,\n            onClick: renderProps.onClick,\n            disabled: renderProps.disabled,\n            startIcon: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 169\n            }, this),\n            variant: \"contained\",\n            children: \"Google Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this),\n          onSuccess: googleSuccess,\n          onFailure: googleFailure,\n          cookiePolicy: 'single_host_origin'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: switchMode,\n              children: isSignUp ? 'Already have an account ? Sign In' : 'Don\\'t have an account ? Sign up'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"U/GTQI9DI5XvwU2Wa/XmwFHO+2Q=\", false, function () {\n  return [useStyles, useHistory, useDispatch];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/home/adrien/Documents/web_dev/REACT/mern_memories/client/src/components/Auth/Auth.jsx"],"names":["React","useState","Avatar","Button","Paper","Grid","Typography","Container","OutlinedInput","LockOutlinedIcon","GoogleLogin","useDispatch","useHistory","useStyles","Input","Icon","initialState","firstName","lastName","email","password","confirmPassword","Auth","classes","history","showPassword","setShowPassword","isSignUp","setisSignUp","formData","setFormData","dispatch","handleSubmit","e","preventDefault","console","log","handleChange","target","name","value","handleShowPassword","prevShowPassword","switchMode","previsSignUp","googleSuccess","res","result","profileObj","token","tokenId","type","data","push","error","googleFailure","paper","avatar","form","submit","renderProps","googleButton","onClick","disabled"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Avatar, Button, Paper, Grid, Typography, Container, OutlinedInput } from '@material-ui/core'; \nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { GoogleLogin } from 'react-google-login';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport useStyles from './styles';\nimport Input from './Input';\nimport Icon from './icon';\n\nconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' }\n\nconst Auth = () => {\n    const classes = useStyles();\n    const history = useHistory();\n    const [showPassword, setShowPassword] = useState(false);\n    const [isSignUp, setisSignUp] = useState(false);\n    const [formData, setFormData] = useState(initialState);\n    const dispatch = useDispatch();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log('submit');\n    };\n\n    const handleChange = (e) => {\n        setFormData({ ...formData, [e.target.name]: e.target.value});\n    };\n\n    const handleShowPassword = () => setShowPassword((prevShowPassword) => !prevShowPassword);\n\n    const switchMode = () => {\n        setisSignUp((previsSignUp) => !previsSignUp);\n        setShowPassword(false);\n    }\n\n    const googleSuccess = async (res) => {\n        const result = res?.profileObj;\n        const token = res?.tokenId;\n\n        try {\n            dispatch({ type: 'AUTH', data: { result, token } });\n            history.push('/');\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const googleFailure = () => {\n        console.log(\"Fail to log in with google :(\")\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <Paper className={classes.paper} elevation={3}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography variant=\"h5\">\n                    {isSignUp ? 'Sign Up' : 'Sign In'}\n                </Typography>\n                <form className={classes.form} onSubmit={handleSubmit}>\n                    <Grid container spacing={2}>\n                        {isSignUp && (\n                            <>\n                                <Input half name=\"firstName\" label=\"First Name\" autoFocus handleChange={handleChange}/>\n                                <Input half name=\"lastName\" label=\"Last Name\" handleChange={handleChange}/>\n                            </>\n                        )}\n                        <Input name=\"email\" label=\"Email Address\" type=\"email\" handleChange={handleChange}/>\n                        <Input name=\"password\" label=\"Password\" type={showPassword ? \"text\" : \"password\"} handleChange={handleChange} handleShowPassword={handleShowPassword}/>\n                        {isSignUp && (\n                            <Input name=\"confirmPassword\" label=\"Confirm Password\" type=\"password\" handleChange={handleChange}/>\n                        )}\n                    </Grid>\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>{isSignUp ? \"Sign Up\" : \"Sign In\"}</Button>\n                    <GoogleLogin\n                        clientId=\"232609410583-kojm4bgmtp52v6m3anbh4m944kt8e5e9.apps.googleusercontent.com\"\n                        render={renderProps => (\n                            <Button className={classes.googleButton} color=\"primary\" fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon />} variant=\"contained\">Google Sign In</Button>\n                        )}\n                        onSuccess={googleSuccess}\n                        onFailure={googleFailure}\n                        cookiePolicy={'single_host_origin'} \n                    />\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Button onClick={switchMode}>\n                                {isSignUp ? 'Already have an account ? Sign In' : 'Don\\'t have an account ? Sign up'}\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </Paper>\n        </Container>\n    )\n}\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}
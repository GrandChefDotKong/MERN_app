{"ast":null,"code":"import { FETCH_ALL, FETCH_BY_SEARCH, CREATE, DELETE, UPDATE, LIKE, START_LOADING, END_LOADING } from '../constants/actionTypes';\nexport default ((state = {\n  isLoading: true,\n  posts: []\n}, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case END_LOADING:\n      return { ...state,\n        isLoading: false\n      };\n\n    case FETCH_ALL:\n      return { ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage\n      };\n\n    case FETCH_BY_SEARCH:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case CREATE:\n      return { ...state,\n        posts: [...state, action.payload]\n      };\n\n    case UPDATE:\n    case LIKE:\n      return { ...state,\n        posts: state.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case DELETE:\n      return { ...state,\n        posts: state.filter(post => post._id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/adrien/Documents/web_dev/REACT/mern_memories/client/src/reducers/posts.jsx"],"names":["FETCH_ALL","FETCH_BY_SEARCH","CREATE","DELETE","UPDATE","LIKE","START_LOADING","END_LOADING","state","isLoading","posts","action","type","payload","data","currentPage","map","post","_id","filter"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,eAApB,EAAsCC,MAAtC,EAA8CC,MAA9C,EAAsDC,MAAtD,EAA8DC,IAA9D,EAAoEC,aAApE,EAAmFC,WAAnF,QAAsG,0BAAtG;AACA,gBAAe,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE,IAAb;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAAT,EAAyCC,MAAzC,KAAoD;AAC/D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,aAAL;AACI,aAAO,EAAE,GAAGE,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACJ,SAAKF,WAAL;AACI,aAAO,EAAE,GAAGC,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACJ,SAAKT,SAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHE,QAAAA,KAAK,EAAEC,MAAM,CAACE,OAAP,CAAeC,IAFnB;AAGHC,QAAAA,WAAW,EAAEJ,MAAM,CAACE,OAAP,CAAeE;AAHzB,OAAP;;AAKJ,SAAKd,eAAL;AACI,aAAO,EAAE,GAAGO,KAAL;AAAYE,QAAAA,KAAK,EAAEC,MAAM,CAACE;AAA1B,OAAP;;AACJ,SAAKX,MAAL;AACI,aAAO,EAAE,GAAGM,KAAL;AAAYE,QAAAA,KAAK,EAAE,CAAC,GAAGF,KAAJ,EAAWG,MAAM,CAACE,OAAlB;AAAnB,OAAP;;AACJ,SAAKT,MAAL;AACA,SAAKC,IAAL;AACI,aAAO,EAAE,GAAGG,KAAL;AAAYE,QAAAA,KAAK,EAAEF,KAAK,CAACQ,GAAN,CAAWC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaP,MAAM,CAACE,OAAP,CAAeK,GAA5B,GAAkCP,MAAM,CAACE,OAAzC,GAAmDI,IAAvE;AAAnB,OAAP;;AACJ,SAAKd,MAAL;AACQ,aAAO,EAAE,GAAGK,KAAL;AAAYE,QAAAA,KAAK,EAAEF,KAAK,CAACW,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaP,MAAM,CAACE,OAA3C;AAAnB,OAAP;;AACR;AACI,aAAOL,KAAP;AArBR;AAuBH,CAxBD","sourcesContent":["import { FETCH_ALL, FETCH_BY_SEARCH,  CREATE, DELETE, UPDATE, LIKE, START_LOADING, END_LOADING } from '../constants/actionTypes';\nexport default (state = { isLoading: true, posts: [] }, action) => {\n    switch(action.type) {\n        case START_LOADING:\n            return { ...state, isLoading: true }\n        case END_LOADING: \n            return { ...state, isLoading: false }\n        case FETCH_ALL:\n            return {\n                ...state,\n                posts: action.payload.data,\n                currentPage: action.payload.currentPage,\n            }\n        case FETCH_BY_SEARCH:\n            return { ...state, posts: action.payload }\n        case CREATE:\n            return { ...state, posts: [...state, action.payload] };\n        case UPDATE:\n        case LIKE:\n            return { ...state, posts: state.map((post) => post._id === action.payload._id ? action.payload : post) };\n        case DELETE:\n                return { ...state, posts: state.filter((post) => post._id !== action.payload) };\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}
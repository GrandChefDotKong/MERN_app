{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/adrien/Documents/web_dev/REACT/mern_memories/client/src/components/Home/Home.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Container, Grow, Grid, Paper, AppBar, TextField, Button } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport ChipInput from 'material-ui-chip-input';\nimport { getPostsBySearch } from '../../actions/posts';\nimport Posts from '../Posts/Posts';\nimport Form from '../Form/Form';\nimport Pagination from '../Pagination';\nimport useStyles from './styles';\n\nfunction useQuery() {\n  _s();\n\n  return new URLSearchParams(useLocation().search);\n}\n\n_s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n  return [useLocation];\n});\n\nconst Home = () => {\n  _s2();\n\n  const dispatch = useDispatch();\n  const [currentId, setCurrentId] = useState(null);\n  const query = useQuery();\n  const history = useHistory();\n  const page = query.get('page') || 1;\n  const searchQuery = query.get('searchQuery');\n  const classes = useStyles();\n  const [search, setSearch] = useState('');\n  const [tags, setTags] = useState([]);\n\n  const searchPost = () => {\n    if (search.trim() || tags) {\n      dispatch(getPostsBySearch({\n        search,\n        tags: tags.join(',')\n      }));\n      history.push(`/posts/search??searchQuery=${search || 'none'}&tags=${tags.join(',')}`);\n    } else {\n      history.push('/');\n    }\n  };\n\n  const handleKeyPress = e => {\n    if (e.keyCode === 13) {\n      searchPost();\n    }\n  };\n\n  const handleAdd = tag => setTags([...tags, tag]);\n\n  const handleDelete = tagToDelete => setTags(tags.filter(tag => tag !== tagToDelete));\n\n  return /*#__PURE__*/_jsxDEV(Grow, {\n    in: true,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"space-between\",\n        alignItems: \"stretch\",\n        spacing: 3,\n        classNames: classes.gridContainer,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 9,\n          children: /*#__PURE__*/_jsxDEV(Posts, {\n            setCurrentId: setCurrentId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 3,\n          children: [/*#__PURE__*/_jsxDEV(AppBar, {\n            className: classes.appBarSearch,\n            position: \"static\",\n            color: \"inherit\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              name: \"search\",\n              variant: \"outlined\",\n              label: \"Search Memories\",\n              onKeyPress: handleKeyPress,\n              fullWidth: true,\n              value: search,\n              onChange: e => setSearch(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ChipInput, {\n              style: {\n                margin: '10px 0'\n              },\n              value: tags,\n              onAdd: handleAdd,\n              onDelete: handleDelete,\n              label: \"Search Tags\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: searchPost,\n              className: classes.searchButton,\n              variant: \"contained\",\n              color: \"primary\",\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            currentId: currentId,\n            setCurrentId: setCurrentId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 6,\n            children: /*#__PURE__*/_jsxDEV(Pagination, {\n              page: page\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Home, \"a+SIZQFCOGnTlg10OGIujrgm1kc=\", false, function () {\n  return [useDispatch, useQuery, useHistory, useStyles];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/adrien/Documents/web_dev/REACT/mern_memories/client/src/components/Home/Home.jsx"],"names":["React","useState","Container","Grow","Grid","Paper","AppBar","TextField","Button","useDispatch","useHistory","useLocation","ChipInput","getPostsBySearch","Posts","Form","Pagination","useStyles","useQuery","URLSearchParams","search","Home","dispatch","currentId","setCurrentId","query","history","page","get","searchQuery","classes","setSearch","tags","setTags","searchPost","trim","join","push","handleKeyPress","e","keyCode","handleAdd","tag","handleDelete","tagToDelete","filter","gridContainer","appBarSearch","target","value","margin","searchButton"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Container, Grow, Grid, Paper, AppBar, TextField, Button } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport ChipInput from 'material-ui-chip-input';\n\nimport { getPostsBySearch } from '../../actions/posts';\nimport Posts from '../Posts/Posts';\nimport Form from '../Form/Form';\nimport Pagination from '../Pagination';\n\nimport useStyles from './styles';\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nconst Home = () => {\n    const dispatch = useDispatch();\n    const [currentId, setCurrentId] = useState(null);\n    const query = useQuery();\n    const history = useHistory();\n    const page = query.get('page') || 1;\n    const searchQuery = query.get('searchQuery');\n    const classes = useStyles();\n    const [search, setSearch] = useState('');\n    const [tags, setTags] = useState([]);\n\n    const searchPost = () => {\n        if(search.trim() || tags) {\n            dispatch(getPostsBySearch({ search, tags: tags.join(',') }));\n            history.push(`/posts/search??searchQuery=${search || 'none'}&tags=${tags.join(',')}`);\n        } else {\n            history.push('/');\n        }\n    } \n\n    const handleKeyPress = (e) => {\n        if(e.keyCode === 13) {\n            searchPost();\n        } \n    }\n\n    const handleAdd = (tag) => setTags([...tags, tag]);\n    const handleDelete = (tagToDelete) => setTags(tags.filter((tag) => tag !== tagToDelete));\n\n    return (\n        <Grow in>\n            <Container maxWidth=\"xl\">\n                <Grid container justify=\"space-between\" alignItems=\"stretch\" spacing={3} classNames={classes.gridContainer}>\n                    <Grid item xs={12} sm={6} md={9}>\n                        <Posts setCurrentId={setCurrentId} />\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={3}>\n                        <AppBar className={classes.appBarSearch} position=\"static\" color=\"inherit\">\n                            <TextField \n                                name=\"search\" \n                                variant=\"outlined\" \n                                label=\"Search Memories\"\n                                onKeyPress={handleKeyPress} \n                                fullWidth \n                                value={search} \n                                onChange={(e) => setSearch(e.target.value) } \n                            />\n                            <ChipInput\n                                style={{ margin: '10px 0' }}\n                                value={tags}\n                                onAdd={handleAdd}\n                                onDelete={handleDelete}\n                                label=\"Search Tags\"\n                                variant=\"outlined\"\n                            />\n                            <Button onClick={searchPost} className={classes.searchButton} variant=\"contained\" color=\"primary\">Search</Button>\n                        </AppBar>\n                        <Form currentId={currentId} setCurrentId={setCurrentId} />\n                        <Paper elevation={6}>\n                            <Pagination page={page} />\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </Container>\n        </Grow>\n    )\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}
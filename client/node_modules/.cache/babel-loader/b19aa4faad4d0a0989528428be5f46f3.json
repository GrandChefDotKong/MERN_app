{"ast":null,"code":"import { FETCH_ALL, FETCH_BY_SEARCH, CREATE, DELETE, UPDATE, LIKE, START_LOADING, END_LOADING } from '../constants/actionTypes';\nexport default ((state = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return { ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage\n      };\n\n    case FETCH_BY_SEARCH:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case CREATE:\n      return [...state, action.payload];\n\n    case UPDATE:\n    case LIKE:\n      return state.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case DELETE:\n      return state.filter(post => post._id !== action.payload);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/adrien/Documents/web_dev/REACT/mern_memories/client/src/reducers/posts.jsx"],"names":["FETCH_ALL","FETCH_BY_SEARCH","CREATE","DELETE","UPDATE","LIKE","START_LOADING","END_LOADING","state","action","type","posts","payload","data","currentPage","map","post","_id","filter"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,eAApB,EAAsCC,MAAtC,EAA8CC,MAA9C,EAAsDC,MAAtD,EAA8DC,IAA9D,EAAoEC,aAApE,EAAmFC,WAAnF,QAAsG,0BAAtG;AACA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACnC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,SAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHG,QAAAA,KAAK,EAAEF,MAAM,CAACG,OAAP,CAAeC,IAFnB;AAGHC,QAAAA,WAAW,EAAEL,MAAM,CAACG,OAAP,CAAeE;AAHzB,OAAP;;AAKJ,SAAKb,eAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHG,QAAAA,KAAK,EAAEF,MAAM,CAACG;AAFX,OAAP;;AAIJ,SAAKV,MAAL;AACI,aAAO,CAAC,GAAGM,KAAJ,EAAWC,MAAM,CAACG,OAAlB,CAAP;;AACJ,SAAKR,MAAL;AACA,SAAKC,IAAL;AACI,aAAOG,KAAK,CAACO,GAAN,CAAWC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaR,MAAM,CAACG,OAAP,CAAeK,GAA5B,GAAkCR,MAAM,CAACG,OAAzC,GAAmDI,IAAvE,CAAP;;AACJ,SAAKb,MAAL;AACQ,aAAOK,KAAK,CAACU,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaR,MAAM,CAACG,OAA3C,CAAP;;AACR;AACI,aAAOJ,KAAP;AApBR;AAsBH,CAvBD","sourcesContent":["import { FETCH_ALL, FETCH_BY_SEARCH,  CREATE, DELETE, UPDATE, LIKE, START_LOADING, END_LOADING } from '../constants/actionTypes';\nexport default (state = [], action) => {\n    switch(action.type) {\n        case FETCH_ALL:\n            return {\n                ...state,\n                posts: action.payload.data,\n                currentPage: action.payload.currentPage,\n            }\n        case FETCH_BY_SEARCH:\n            return {\n                ...state,\n                posts: action.payload,\n            }\n        case CREATE:\n            return [...state, action.payload];\n        case UPDATE:\n        case LIKE:\n            return state.map((post) => post._id === action.payload._id ? action.payload : post);\n        case DELETE:\n                return state.filter((post) => post._id !== action.payload);\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import * as api from '../api';\nimport { CREATE, FETCH_ALL, FETCH_BY_SEARCH, DELETE, UPDATE, LIKE, START_LOADING, END_LOADING } from '../constants/actionTypes';\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/home/adrien/Documents/web_dev/REACT/mern_memories/client/src/actions/posts.jsx"],"names":["api","CREATE","FETCH_ALL","FETCH_BY_SEARCH","DELETE","UPDATE","LIKE","START_LOADING","END_LOADING","getPosts","page","dispatch","type","data","fetchPosts","payload","error","console","log","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","post","updatePost","id","deletePost","likePost"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,QAArB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,eAA5B,EAA6CC,MAA7C,EAAqDC,MAArD,EAA6DC,IAA7D,EAAmEC,aAAnE,EAAkFC,WAAlF,QAAqG,0BAArG;AAEA,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;AAClD,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;AAEA,UAAM;AAAEM,MAAAA;AAAF,QAAW,MAAMb,GAAG,CAACc,UAAJ,CAAeJ,IAAf,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV,SAAR;AAAmBa,MAAAA,OAAO,EAAEF;AAA5B,KAAD,CAAR;AAEAF,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ;AAAR,KAAD,CAAR;AACH,GAPD,CAOE,OAAOQ,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAXM;AAaP,OAAO,MAAMG,gBAAgB,GAAIC,WAAD,IAAiB,MAAOT,QAAP,IAAoB;AACjE,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;AACA,UAAM;AAAEM,MAAAA,IAAI,EAAE;AAAEA,QAAAA;AAAF;AAAR,QAAqB,MAAMb,GAAG,CAACqB,kBAAJ,CAAuBD,WAAvB,CAAjC;AACAT,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET,eAAR;AAAyBY,MAAAA,OAAO,EAAEF;AAAlC,KAAD,CAAR;AACAF,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ;AAAR,KAAD,CAAR;AACH,GALD,CAKE,OAAOQ,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CATM;AAWP,OAAO,MAAMM,UAAU,GAAIC,IAAD,IAAU,MAAOZ,QAAP,IAAoB;AACpD,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;AACA,UAAM;AAAEM,MAAAA;AAAF,QAAW,MAAMb,GAAG,CAACsB,UAAJ,CAAeC,IAAf,CAAvB;AACAZ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEX,MAAR;AAAgBc,MAAAA,OAAO,EAAEF;AAAzB,KAAD,CAAR;AACAF,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ;AAAR,KAAD,CAAR;AACH,GALD,CAKE,OAAOQ,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CATM;AAWP,OAAO,MAAMQ,UAAU,GAAG,CAACC,EAAD,EAAKF,IAAL,KAAc,MAAOZ,QAAP,IAAoB;AACxD,MAAI;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAW,MAAMb,GAAG,CAACwB,UAAJ,CAAeC,EAAf,EAAmBF,IAAnB,CAAvB;AACAZ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,MAAR;AAAgBU,MAAAA,OAAO,EAAEF;AAAzB,KAAD,CAAR;AACH,GAHD,CAGE,OAAOG,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAPM;AASP,OAAO,MAAMU,UAAU,GAAID,EAAD,IAAQ,MAAOd,QAAP,IAAoB;AAClD,MAAI;AACA,UAAMX,GAAG,CAAC0B,UAAJ,CAAeD,EAAf,CAAN;AACAd,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,MAAR;AAAgBW,MAAAA,OAAO,EAAEU;AAAzB,KAAD,CAAR;AACH,GAHD,CAGE,OAAOT,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAPM;AASP,OAAO,MAAMW,QAAQ,GAAIF,EAAD,IAAQ,MAAOd,QAAP,IAAoB;AAChD,MAAI;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAW,MAAMb,GAAG,CAAC2B,QAAJ,CAAaF,EAAb,CAAvB;AACAd,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,IAAR;AAAcS,MAAAA,OAAO,EAAEF;AAAvB,KAAD,CAAR;AACH,GAHD,CAGE,OAAOG,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAPM","sourcesContent":["import * as api from '../api';\nimport { CREATE, FETCH_ALL, FETCH_BY_SEARCH, DELETE, UPDATE, LIKE, START_LOADING, END_LOADING } from '../constants/actionTypes';\n\nexport const getPosts = (page) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING });\n\n        const { data } = await api.fetchPosts(page);\n        dispatch({ type: FETCH_ALL, payload: data });\n\n        dispatch({ type: END_LOADING });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING });\n        const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\n        dispatch({ type: FETCH_BY_SEARCH, payload: data });\n        dispatch({ type: END_LOADING });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const createPost = (post) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING });\n        const { data } = await api.createPost(post);\n        dispatch({ type: CREATE, payload: data });\n        dispatch({ type: END_LOADING });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        const { data } = await api.updatePost(id, post);\n        dispatch({ type: UPDATE, payload: data });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id);\n        dispatch({ type: DELETE, payload: id });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const likePost = (id) => async (dispatch) => {\n    try {\n        const { data } = await api.likePost(id);\n        dispatch({ type: LIKE, payload: data });\n    } catch (error) {\n        console.log(error);\n    }\n}"]},"metadata":{},"sourceType":"module"}
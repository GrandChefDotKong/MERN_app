{"ast":null,"code":"import _toConsumableArray from\"/home/adrien/Documents/web_dev/REACT/mern_memories/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/adrien/Documents/web_dev/REACT/mern_memories/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{FETCH_ALL,FETCH_BY_SEARCH,FETCH_POST,CREATE,DELETE,UPDATE,LIKE,START_LOADING,END_LOADING}from'../constants/actionTypes';export default(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{isLoading:true,posts:[]};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case START_LOADING:return _objectSpread(_objectSpread({},state),{},{isLoading:true});case END_LOADING:return _objectSpread(_objectSpread({},state),{},{isLoading:false});case FETCH_POST:return _objectSpread(_objectSpread({},state),{},{post:action.payload.post});case FETCH_ALL:return _objectSpread(_objectSpread({},state),{},{posts:action.payload.data,currentPage:action.payload.currentPage,numberOfPages:action.payload.numberOfPages});case FETCH_BY_SEARCH:return _objectSpread(_objectSpread({},state),{},{posts:action.payload});case CREATE:return _objectSpread(_objectSpread({},state),{},{posts:[].concat(_toConsumableArray(state.posts),[action.payload])});case UPDATE:case LIKE:return _objectSpread(_objectSpread({},state),{},{posts:state.posts.map(function(post){return post._id===action.payload._id?action.payload:post;})});case DELETE:return _objectSpread(_objectSpread({},state),{},{posts:state.posts.filter(function(post){return post._id!==action.payload;})});default:return state;}});","map":{"version":3,"sources":["/home/adrien/Documents/web_dev/REACT/mern_memories/client/src/reducers/posts.jsx"],"names":["FETCH_ALL","FETCH_BY_SEARCH","FETCH_POST","CREATE","DELETE","UPDATE","LIKE","START_LOADING","END_LOADING","state","isLoading","posts","action","type","post","payload","data","currentPage","numberOfPages","map","_id","filter"],"mappings":"uWAAA,OAASA,SAAT,CAAoBC,eAApB,CAAqCC,UAArC,CAAiDC,MAAjD,CAAyDC,MAAzD,CAAiEC,MAAjE,CAAyEC,IAAzE,CAA+EC,aAA/E,CAA8FC,WAA9F,KAAiH,0BAAjH,CACA,eAAe,UAAoD,IAAnDC,CAAAA,KAAmD,2DAA3C,CAAEC,SAAS,CAAE,IAAb,CAAmBC,KAAK,CAAE,EAA1B,CAA2C,IAAXC,CAAAA,MAAW,2CAC/D,OAAOA,MAAM,CAACC,IAAd,EACI,IAAKN,CAAAA,aAAL,CACI,sCAAYE,KAAZ,MAAmBC,SAAS,CAAE,IAA9B,GACJ,IAAKF,CAAAA,WAAL,CACI,sCAAYC,KAAZ,MAAmBC,SAAS,CAAE,KAA9B,GACJ,IAAKR,CAAAA,UAAL,CACA,sCAAYO,KAAZ,MAAmBK,IAAI,CAAEF,MAAM,CAACG,OAAP,CAAeD,IAAxC,GACA,IAAKd,CAAAA,SAAL,CACI,sCACOS,KADP,MAEIE,KAAK,CAAEC,MAAM,CAACG,OAAP,CAAeC,IAF1B,CAGIC,WAAW,CAAEL,MAAM,CAACG,OAAP,CAAeE,WAHhC,CAIIC,aAAa,CAAEN,MAAM,CAACG,OAAP,CAAeG,aAJlC,GAMJ,IAAKjB,CAAAA,eAAL,CACI,sCAAYQ,KAAZ,MAAmBE,KAAK,CAAEC,MAAM,CAACG,OAAjC,GACJ,IAAKZ,CAAAA,MAAL,CACI,sCAAYM,KAAZ,MAAmBE,KAAK,8BAAMF,KAAK,CAACE,KAAZ,GAAmBC,MAAM,CAACG,OAA1B,EAAxB,GACJ,IAAKV,CAAAA,MAAL,CACA,IAAKC,CAAAA,IAAL,CACI,sCAAYG,KAAZ,MAAmBE,KAAK,CAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAgB,SAACL,IAAD,QAAUA,CAAAA,IAAI,CAACM,GAAL,GAAaR,MAAM,CAACG,OAAP,CAAeK,GAA5B,CAAkCR,MAAM,CAACG,OAAzC,CAAmDD,IAA7D,EAAhB,CAA1B,GACJ,IAAKV,CAAAA,MAAL,CACQ,sCAAYK,KAAZ,MAAmBE,KAAK,CAAEF,KAAK,CAACE,KAAN,CAAYU,MAAZ,CAAmB,SAACP,IAAD,QAAUA,CAAAA,IAAI,CAACM,GAAL,GAAaR,MAAM,CAACG,OAA9B,EAAnB,CAA1B,GACR,QACI,MAAON,CAAAA,KAAP,CAxBR,CA0BH,CA3BD","sourcesContent":["import { FETCH_ALL, FETCH_BY_SEARCH, FETCH_POST, CREATE, DELETE, UPDATE, LIKE, START_LOADING, END_LOADING } from '../constants/actionTypes';\nexport default (state = { isLoading: true, posts: [] }, action) => {\n    switch(action.type) {\n        case START_LOADING:\n            return { ...state, isLoading: true }\n        case END_LOADING: \n            return { ...state, isLoading: false }\n        case FETCH_POST: \n        return { ...state, post: action.payload.post }\n        case FETCH_ALL:\n            return {\n                ...state,\n                posts: action.payload.data,\n                currentPage: action.payload.currentPage,\n                numberOfPages: action.payload.numberOfPages,\n            }\n        case FETCH_BY_SEARCH:\n            return { ...state, posts: action.payload }\n        case CREATE:\n            return { ...state, posts: [...state.posts, action.payload] };\n        case UPDATE:\n        case LIKE:\n            return { ...state, posts: state.posts.map((post) => post._id === action.payload._id ? action.payload : post) };\n        case DELETE:\n                return { ...state, posts: state.posts.filter((post) => post._id !== action.payload) };\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}
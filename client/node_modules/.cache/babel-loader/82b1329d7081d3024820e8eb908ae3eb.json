{"ast":null,"code":"import { FETCH_ALL, FETCH_BY_SEARCH, FETCH_POST, CREATE, DELETE, UPDATE, LIKE, COMMENT, START_LOADING, END_LOADING } from '../constants/actionTypes';\n\nconst postsReducer = (state = {\n  isLoading: true,\n  posts: []\n}, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case END_LOADING:\n      return { ...state,\n        isLoading: false\n      };\n\n    case FETCH_POST:\n      return { ...state,\n        post: action.payload.post\n      };\n\n    case FETCH_ALL:\n      return { ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n\n    case FETCH_BY_SEARCH:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case CREATE:\n      return { ...state,\n        posts: [...state.posts, action.payload]\n      };\n\n    case UPDATE:\n    case LIKE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case COMMENT:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case DELETE:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default postsReducer;","map":{"version":3,"sources":["/home/adrien/Documents/web_dev/REACT/mern_memories/client/src/reducers/posts.jsx"],"names":["FETCH_ALL","FETCH_BY_SEARCH","FETCH_POST","CREATE","DELETE","UPDATE","LIKE","COMMENT","START_LOADING","END_LOADING","postsReducer","state","isLoading","posts","action","type","post","payload","data","currentPage","numberOfPages","map","_id","filter"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,eAApB,EAAqCC,UAArC,EAAiDC,MAAjD,EAAyDC,MAAzD,EAAiEC,MAAjE,EAAyEC,IAAzE,EAA+EC,OAA/E,EAAwFC,aAAxF,EAAuGC,WAAvG,QAA0H,0BAA1H;;AACA,MAAMC,YAAY,GAAI,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE,IAAb;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAAT,EAAyCC,MAAzC,KAAoD;AACtE,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,aAAL;AACI,aAAO,EAAE,GAAGG,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACJ,SAAKH,WAAL;AACI,aAAO,EAAE,GAAGE,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACJ,SAAKV,UAAL;AACA,aAAO,EAAE,GAAGS,KAAL;AAAYK,QAAAA,IAAI,EAAEF,MAAM,CAACG,OAAP,CAAeD;AAAjC,OAAP;;AACA,SAAKhB,SAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHE,QAAAA,KAAK,EAAEC,MAAM,CAACG,OAAP,CAAeC,IAFnB;AAGHC,QAAAA,WAAW,EAAEL,MAAM,CAACG,OAAP,CAAeE,WAHzB;AAIHC,QAAAA,aAAa,EAAEN,MAAM,CAACG,OAAP,CAAeG;AAJ3B,OAAP;;AAMJ,SAAKnB,eAAL;AACI,aAAO,EAAE,GAAGU,KAAL;AAAYE,QAAAA,KAAK,EAAEC,MAAM,CAACG;AAA1B,OAAP;;AACJ,SAAKd,MAAL;AACI,aAAO,EAAE,GAAGQ,KAAL;AAAYE,QAAAA,KAAK,EAAE,CAAC,GAAGF,KAAK,CAACE,KAAV,EAAiBC,MAAM,CAACG,OAAxB;AAAnB,OAAP;;AACJ,SAAKZ,MAAL;AACA,SAAKC,IAAL;AACI,aAAO,EAAE,GAAGK,KAAL;AAAYE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBL,IAAD,IAAUA,IAAI,CAACM,GAAL,KAAaR,MAAM,CAACG,OAAP,CAAeK,GAA5B,GAAkCR,MAAM,CAACG,OAAzC,GAAmDD,IAA7E;AAAnB,OAAP;;AACJ,SAAKT,OAAL;AACI,aAAO,EAAE,GAAGI,KAAL;AAAYE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBL,IAAD,IAAUA,IAAI,CAACM,GAAL,KAAaR,MAAM,CAACG,OAAP,CAAeK,GAA5B,GAAkCR,MAAM,CAACG,OAAzC,GAAmDD,IAA7E;AAAnB,OAAP;;AACJ,SAAKZ,MAAL;AACQ,aAAO,EAAE,GAAGO,KAAL;AAAYE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYU,MAAZ,CAAoBP,IAAD,IAAUA,IAAI,CAACM,GAAL,KAAaR,MAAM,CAACG,OAAjD;AAAnB,OAAP;;AACR;AACI,aAAON,KAAP;AA1BR;AA4BH,CA7BD;;AA+BA,eAAeD,YAAf","sourcesContent":["import { FETCH_ALL, FETCH_BY_SEARCH, FETCH_POST, CREATE, DELETE, UPDATE, LIKE, COMMENT, START_LOADING, END_LOADING } from '../constants/actionTypes';\nconst postsReducer =  (state = { isLoading: true, posts: [] }, action) => {\n    switch(action.type) {\n        case START_LOADING:\n            return { ...state, isLoading: true }\n        case END_LOADING: \n            return { ...state, isLoading: false }\n        case FETCH_POST: \n        return { ...state, post: action.payload.post }\n        case FETCH_ALL:\n            return {\n                ...state,\n                posts: action.payload.data,\n                currentPage: action.payload.currentPage,\n                numberOfPages: action.payload.numberOfPages,\n            }\n        case FETCH_BY_SEARCH:\n            return { ...state, posts: action.payload }\n        case CREATE:\n            return { ...state, posts: [...state.posts, action.payload] };\n        case UPDATE:\n        case LIKE:\n            return { ...state, posts: state.posts.map((post) => post._id === action.payload._id ? action.payload : post) };\n        case COMMENT:\n            return { ...state, posts: state.posts.map((post) => post._id === action.payload._id ? action.payload : post) };\n        case DELETE:\n                return { ...state, posts: state.posts.filter((post) => post._id !== action.payload) };\n        default:\n            return state;\n    }\n}\n\nexport default postsReducer;"]},"metadata":{},"sourceType":"module"}